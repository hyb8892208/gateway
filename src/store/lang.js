import {language} from "../components/language";
import lang from "../../../back/system-time/src/store/lang";

export default {
    //menu
    system: language('System'),
    analog: language('Analog'),
    voip: language('Voip'),
    routing: language('Routing'),
    network: language('Network'),
    advanced: language('Advanced'),
    logs: language('Logs'),

    //title
    status: language('Status'),
    time: language('Time'),
    login_settings: language('Login Settings'),
    general: language('General'),
    tools: language('Tools'),
    information: language('Information'),
    config_record: language('Config Record'),
    config_label: language('Config Label'),

    channel_settings: language('Channel Settings'),
    pickup: language('Pickup'),
    dial_matching_table: language('Dial Matching Table'),
    special_function_keys: language('Special Function Keys'),
    fxo: language('FXO'),
    fxs: language('FXS'),
    driver: language('Driver'),

    sip_endpoints: language('SIP Endpoints'),
    fxs_batch_binding_sip: language('FXS Batch Binding SIP'),
    batch_create_sip: language('Batch Create SIP'),
    advanced_sip_settings: language('Advanced SIP Settings'),
    sip_account_security: language('SIP Account Security'),

    call_routing_ruls: language('Call Routing Rules'),
    group: language('Group'),
    groups: language('Groups'),
    batch_create_rules: language('Batch Create Rules'),

    basic_settings: language('Basic Settings'),
    lan_settings: language('Lan Settings'),
    wan_settings: language('Wan Settings'),
    vpn_settings: language('VPN Settings'),
    ddns_settings: language('DDNS Settings'),
    toolkit: language('Toolkit'),
    security_settings: language('Security Settings'),
    security_rules: language('Security Rules'),

    asterisk_api: language('Asterisk API'),
    asterisk_cli: language('Asterisk CLI'),
    asterisk_file_editor: language('Asterisk File Editor'),
    cloud: language('Cloud'),
    tr069: language('TR069'),
    snmp: language('SNMP'),
    auto_provision: language('Auto Provision'),
    board_update: language('Board Update'),

    log_settings: language('Log Settings'),
    system_logs: language('System Logs'),
    asterisk_logs: language('Asterisk Logs'),
    sip_logs: language('SIP Logs'),
    dahdi_logs: language('DAHDI Logs'),
    cdr: language('CDR'),

    //System-status
    port: language('Port'),
    type: language('Type'),
    line_status: language('Line Status/Sip Account'),
    port_status: language('Port Status'),
    voltage: language('Voltage'),
    endpoint_name: language("Endpoint Name"),
    username: language("User Name"),
    host: language("Host"),
    registration: language("Registration"),
    sip_status: language("SIP Status"),
    response_code: language("Response Code"),
    rule_name: language("Rule Name"),
    from: language("From"),
    to: language("To"),
    name: language("Name"),
    mac_address: language("MAC Address"),
    ip_address: language("IP Address"),
    mask: language("Mask"),
    gateway: language("Gateway"),
    rx_packets: language("RX Packets"),
    tx_packets: language("TX Packets"),
    port_information: language('Port Information'),
    sip_information: language('SIP Information'),
    routing_information: language('Routing Information'),
    network_information: language('Network Information'),
    vpn_information: language('VPN Information'),
    ptpip: language('P-t-P IP Address'),
    all: language('All'),

    //System-time
    system_time: language('System Time'),
    system_time_help: language('System Time help@system-time', 'Your gateway system time.'),
    time_zone: language('Time Zone'),
    time_zone_help: language('Time Zone help@system-time', 'The world time zone. Please select the one which is the same as or the closest to your city.'),
    success: language('Success'),
    failed: language('Failed'),

    melbourne: language('Melbourne,Canberra,Sydney'),
    perth: language('Perth'),
    brisbane: language('Brisbane'),
    adelaide: language('Adelaide'),
    darwin: language('Darwin'),
    hobart: language('Hobart'),
    amsterdam: language('Amsterdam,Netherlands'),
    athens: language('Athens,Greece'),
    berlin: language('Berlin,Germany'),
    brussels: language('Brussels,Belgium'),
    bratislava: language('Bratislava,Slovakia'),
    budapest: language('Budapest,Hungary'),
    copenhagen: language('Copenhagen,Denmark'),
    dublin: language('Dublin,Ireland'),
    helsinki: language('Helsinki,Finland'),
    kyiv: language('Kyiv,Ukraine'),
    lisbon: language('Lisbon,Portugal'),
    london: language('London,GreatBritain'),
    madrid: language('Madrid,Spain'),
    oslo: language('Oslo,Norway'),
    paris: language('Paris,France'),
    prague: language('Prague,CzechRepublic'),
    roma: language('Roma,Italy'),
    moscow: language('Moscow,Russia'),
    stockholm: language('Stockholm,Sweden'),
    zurich: language('Zurich,Switzerland'),
    auckland: language('Auckland, Wellington'),
    hawaii: language('Hawaii Time'),
    alaska_time: language('Alaska Time'),
    pacific_time: language('Pacific Time'),
    mountain_time: language('Mountain Time'),
    mountain_time_no_dst: language('Mountain Time @Arizona, no DST'),
    central_time: language('Central Time'),
    eastern_time: language('Eastern Time'),
    bermuda: language('Bermuda'),
    anadyr: language('Anadyr'),
    amman: language('Amman'),
    beirut: language('Beirut'),
    damascus: language('Damascus'),
    gaza: language('Gaza'),
    jerusalem: language('Jerusalem'),
    nicosia: language('Nicosia'),
    aden: language('Aden'),
    baghdad: language('Baghdad'),
    bahrain: language('Bahrain'),
    kuwait: language('Kuwait'),
    qatar: language('Qatar'),
    riyadh: language('Riyadh'),
    tehran: language('Tehran'),
    baku: language('Baku'),
    dubai: language('Dubai'),
    muscat: language('Muscat'),
    tbilisi: language('Tbilisi'),
    yerevan: language('Yerevan'),
    kabul: language('Kabul'),
    aqtobe: language('Aqtobe'),
    ashgabat: language('Ashgabat'),
    dushanbe: language('Dushanbe'),
    karachi: language('Karachi'),
    oral: language('Oral'),
    samarkand: language('Samarkand'),
    tashkent: language('Tashkent'),
    yekaterinburg: language('Yekaterinburg'),
    calcutta: language('Calcutta'),
    colombo: language('Colombo'),
    almaty: language('Almaty'),
    bishkek: language('Bishkek'),
    dhaka: language('Dhaka'),
    novosibirsk: language('Novosibirsk'),
    omsk: language('Omsk'),
    qyzylorda: language('Qyzylorda'),
    thimphu: language('Thimphu'),
    jakarta: language('Jakarta'),
    bangkok: language('Bangkok'),
    vientiane: language('Vientiane'),
    phnom_penh: language('Phnom Penh'),
    chongqing: language('Chongqing'),
    hong_kong: language('Hong Kong'),
    shanghai: language('Shanghai'),
    singapore: language('Singapore'),
    urumqi: language('Urumqi'),
    taiwan: language('Taiwan'),
    ulaanbaatar: language('Ulaanbaatar'),
    dili: language('Dili'),
    jayapura: language('Jayapura'),
    pyongyang: language('Pyongyang'),
    seoul: language('Seoul'),
    tokyo: language('Tokyo'),
    yakutsk: language('Yakutsk'),
    sao_paulo: language('Sao Paulo,Brazil'),
    buenos_aires: language('Buenos_Aires,Argentina'),
    central_america: language('Central America @no DST'),
    caracas: language('Caracas,Venezuela'),
    user_defined: language('User defined @or out of date'),
    posix_tz_string: language('POSIX TZ String'),
    posix_tz_string_help: language('POSIX TZ String help', 'Posix timezone strings.'),
    auto_sync_from_ntp: language('Auto-Sync from NTP'),
    auto_sync_from_ntp_help: language('Auto-Sync from NTP help', 'Whether enable automatically synchronize from NTP server or not. On(enabled),OFF(disabled).'),
    australia: language('Australia'),
    europe: language('Europe'),
    new_zealand: language('New Zealand'),
    usa_and_canada: language('USA and Canada'),
    atlantic: language('Atlantic'),
    asia_1: language('Asia')+' (UTC+1)',
    asia_2: language('Asia')+' (UTC+2)',
    asia_3: language('Asia')+' (UTC+3)',
    asia_3_1: language('Asia')+' (UTC+3:30)',
    asia_4: language('Asia')+' (UTC+4)',
    asia_4_1: language('Asia')+' (UTC+4:30)',
    asia_5: language('Asia')+' (UTC+5)',
    asia_5_1: language('Asia')+' (UTC+5:30)',
    asia_6: language('Asia')+' (UTC+6)',
    asia_7: language('Asia')+' (UTC+7)',
    asia_8: language('Asia')+' (UTC+8)',
    asia_9: language('Asia')+' (UTC+9)',
    central_and_south_america: language('Central and South America'),
    unkonwn: language('Unknown'),

    ntp_server1: language('NTP Server 1'),
    ntp_server1_help: language('NTP Server 1 help', 'Time server domain or hostname.For example, [time.asia.apple.com]'),
    ntp_server2: language('NTP Server 2'),
    ntp_server2_help: language('NTP Server 2 help', 'The first reserved NTP server.For example, [time.windows.com]'),
    ntp_server3: language('NTP Server 3'),
    ntp_server3_help: language('NTP Server 3 help', 'The second reserved NTP server.For example, [time.nist.gov]'),
    time_settings: language('Time Settings'),
    sync_ntp: language('Sync NTP'),
    sync_client: language('Sync Client'),
    report: language('Report'),
    time_synchronize: language('Time Synchronize'),
    ntp_running_tip: language('NTP running tip','Sync from NTP is running'),
    client_running_tip: language('Client running tip','Sync from Client is running'),
    synchronize_succeeded: language('Synchronize Succeeded'),
    synchronize_failed: language('Synchronize Failed'),
    confirm: language('confirm'),

    //System-login
    username_help: language('User Name help@system-login web', 'NOTES: Your gateway doesn\'t have administration role. <br/>All you can do here is defining what username and password to manage your gateway.<br/>And it has all privileges to operate your gateway.<br/>User Name: Allowed characters "-_+.<>&0-9a-zA-Z".Length: 1-32 characters.'),
    password: language('Password'),
    password_help: language('Password help@system-login web', 'Characters: Allowed characters "-_+.<>&0-9a-zA-Z".Length: 4-32 characters.'),
    confirm_password: language('Confirm Password'),
    confirm_password_help: language('Confirm Password help@system-login web',"Please input the same password as 'Password' above."),
    login_mode: language('Login Mode'),
    login_mode_help: language('Login Mode help',"Select the mode of login."),
    port_help: language('web server port help','Specify the web server port number.'),
    http_port: language('HTTP Port'),
    https_port: language('HTTPS Port'),
    https_port_help: language('web server port help',"Specify the web server port number."),
    enable: language('Enable'),
    enable_help: language('Enable help', 'ON(enabled),OFF(disabled)'),
    user_name_help_ssh: language('User Name help@system-login ssh', 'User Name: Allowed characters "-_+.<>&0-9a-zA-Z".Length: 1-25 characters.</br>Can\'t use \'root\'.'),
    port_help_ssh: language('Port help@system-login ssh', 'SSH login port number.'),
    save_login: language('Save'),
    web_login_settings: language('Web Login Settings'),
    ssh_login_settings: language('SSH Login Settings'),
    save: language('Save'),

    //System-general
    language: language('Language'),
    download: language('Download'),
    language_download_help: language('Language Download help','Download selected language package.'),
    delete: language('Delete'),
    delete_language_help: language('Delete language help','Delete selected language.'),
    add_new_language: language('Add New Language'),
    add: language('Add'),
    reboot_type: language('Reboot Type'),
    reboot_type_help: language('Reboot Type help','By Day: <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Reboot everyday at xx:xx(time). <br>By Week: <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Reboot everyweek on XXX(week day) at xx:xx(time). <br>By Month: <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Reboot everymonth on XXX(Month day) at xx:xx(time). <br>By Running Time: <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Reboot periodically by the run time.'),
    by_day: language('By Day'),
    by_week: language('By Week'),
    by_month: language('By Month'),
    by_running_time: language('By Running Time'),
    hour: language('Hour'),
    minute: language('Minute'),
    week: language('Week'),
    date: language('Date'),
    running_time: language('Running Time'),
    day: language('Day'),
    language_settings: language('Language Settings'),
    scheduled_reboot: language('Scheduled Reboot'),
    snmp_agent: language('Snmp Agent'),
    select_file: language('Select File'),
    Sun: language('Sun'),
    Mon: language('Mon'),
    Tue: language('Tue'),
    Wed: language('Wed'),
    Thu: language('Thu'),
    Fri: language('Fri'),
    Sat: language('Sat'),

    //System-tools
    system_tools: language('System Tools'),
    system_reboot: language('System Reboot'),
    system_reboot_help: language('System Reboot help','Reboot the gateway and all the current calls will be dropped.'),
    asterisk_reboot: language('Asterisk Reboot'),
    asterisk_reboot_help: language('Asterisk Reboot help','Reboot the asterisk and all the current calls will be dropped.'),
    system_switch: language('System Switch'),
    system_switch_help: language('System Reboot help','Reboot the gateway and all the current calls will be dropped.'),
    new_configuration_file: language('New configuration file'),
    file_upload: language('File Upload'),
    system_update: language('System Update'),
    new_system_file: language('New system file'),
    current_configuration_file_version: language('Current configuration file version'),
    download_backup: language('Download Backup'),
    voice_record: language('Voice Record'),
    voice_record_help: language('Voice Record help', 'Select a module to recode voice.'),
    start_recording: language('Start Recording'),
    factory_reset: language('Factory Reset'),
    factory_reset_help: language('Factory Reset help'),
    restore_system: language('Restore System'),
    restore_system_help: language('Restore System help'),
    reboot_tools: language('Reboot Tools'),
    update_firmware: language('Update Firmware'),
    upload_configuration: language('Upload Configuration'),
    backup_configuration: language('Backup Configuration'),
    restore_configuration: language('Restore Configuration'),
    system_online_update: language('System Online Update'),
    system_online_update_help: language('System Online Update help','New system file is downloaded from official website and update system.'),
    change_log: language('Change Log'),
    detailed: language('Detailed'),
    update_online_now: language('Update Online Now'),
    system_online_update_version_error: language('System Online Update version error','Get remote version failed. Please check the network connection is correct!'),
    system_version_help_1: language('System version help 1',"Your system current version is :"),
    system_version_help_2: language('System version help 2',"The newest system version is :"),
    system_online_update_confirm: language('System Online Update confirm',"Use caution, please : This might damage the structure of your original configuration files.<br/>Do you want to update your system?"),
    stop: language('Stop'),
    configuration_restore: language('Configuration Restore'),
    configuration_restore_wait: language('Configuration Restore wait',"Default Configuration Files Restoring...<br>Please wait for about 60s, system will be rebooting."),
    upload: language('Upload'),
    upload_successful: language('Upload successful'),
    upload_failed: language('Upload failed'),
    please_select_channel: language('Please select channel'),
    count_down: language('Count Down'),
    automatic_restart_system: language('Automatic restart system'),
    system_reboot_wait: language('System Reboot wait','System Rebooting...Please wait for about 60s, system will be rebooting.'),
    system_reboot_confrim: language('System reboot confirm', 'Are you sure you want to restart the system?'),
    system_restart_timeout: language('System Restart Timeout'),
    dialog_close_confirm: language('Dialog close confirm', 'Are you sure you want to close this dialog box?'),
    asterisk_restart_successfully: language('Asterisk restart successfully'),
    asterisk_restart_failed: language('Asterisk restart failed'),
    switch_system_confirm: language('Switch system confirm', 'Are you sure you want to switch the system?'),
    system_switch_successfully: language('System switch successfully'),
    system_switch_failed: language('System switch failed'),
    system_update_confirm: language('System Update confirm', 'Are you sure to update your system?<br/>Use caution, please!This might damage the structure of your original configuration files.'),
    system_updating: language('System Updating', 'The system is being upgraded. It will take about 1-3 minutes. Please wait...'),
    clean_memory_failed: language('Clean memory failed', 'Failed to clean memory. Please try again'),
    system_update_failed: language('System Update Failed'),
    voice_record_confirm: language('Voice record confirm', 'The maximum duration of this recording is 10 minutes,and the system will stop and download the recording file automatically when time is up'),
    voice_file_download_failed: language('Voice file download failed'),
    factory_reset_confirm: language('Factory Reset confirm', 'Are you sure to restore configuration file now?'),
    factory_reset_wait: language('Factory reset wait', 'Restoring factory settings, the system will restart automatically, please wait...'),
    file_upload_confirm: language('File Upload confirm','Are you sure to upload configuration files?<br/>This will damage the structure of your original configuration files.'),

    //System-info
    system_info: language('System Information'),
    model_name: language('Model Name'),
    software_version: language('Software Version'),
    hardware_version: language('Hardware Version'),
    slot_number: language('Slot Number'),
    storage_usage: language('Storage Usage'),
    memory_usage: language('Memory Usage'),
    memory_clean: language('Memory Clean'),
    build_time: language('Build Time'),
    contact_address: language('Contact Address'),
    tel: language('Tel'),
    fax: language('Fax'),
    e_mail: language('E-Mail'),
    web_site: language('Web Site'),
    system_uptime: language('System Uptime'),
    clear_memory_successfully: language('Clear memory successfully'),
    failed_to_clear_memory: language('Failed to clear memory'),

    //Config-record
    ID: language('ID'),
    record_message: language('Record Message'),
    action: language('Action'),
    actions: language('Actions'),
    config_record_switch: language('Config Record Switch'),
    back: language('Back'),

    //Config-label
    new_label: language('New Label'),
    new_label_help: language('New Label'),
    labels: language('Labels'),
    label_name: language('Label Name'),
    commit_open_tip: language('Commit Open help','If you need to use the label function, please open the configuration record switch on the configuration record page.'),

    //Channel-settings
    module_settings: language('Module Settings'),
    cancel: language('Cancel'),
    call_status: language('Call Status'),
    hour_call_count: language('Hour Call Count'),
    daily_call_count: language('Daily Call Count'),
    daily_answer_count: language('Daily Answer Count'),
    limited: language('Limited'),
    unlimited: language('Unlimited'),
    edit: language('Edit'),
    port_type: language('Port type'),
    port_type_help: language('Port type help','The port type <br/>Read only, auto-detected by gateway.'),
    name_help: language('Name'),
    rx_gain: language('Rx gain'),
    rx_gain_help: language('Rx gain help','Set the rx gain (dB). Range: from -20.0dB to 6dB, in 0.1 dB increments.'),
    tx_gain: language('Tx gain'),
    tx_gain_help: language('Tx gain help','Set the tx gain (dB). Range: from -20.0dB to 6dB, in 0.1 dB increments.'),
    ring_timeout: language('Ring timeout'),
    ring_timeout_help: language('Ring timeout help','Set the ring timeout (seconds).'),
    call_limit_switch: language('Call Limit Switch'),
    call_limit_switch_help: language('Call Limit Switch'),
    limit_call_time: language('Limit Call Time'),
    limit_call_time_help: language('Limit Call TIme'),
    limit_daily_call_times: language('Limit Daily Call Times'),
    limit_daily_call_times_help: language('Limit Daily Call Times'),
    limit_daily_answer_times: language('Limit Daily Answer Times'),
    limit_daily_answer_times_help: language('Limit Daily Answer Times'),
    limit_hour_call_times: language('Limit Hour Call Times'),
    limit_hour_call_times_help: language('Limit Hour Call Times'),
    call_limit: language('Call Limit'),
    save_to_other_channels: language('Save To Other Channels'),
    save_to_other_channels_help: language('Save To Other Channels help','Saving channel param to other channels synchronously.'),
    sync_all_settings: language('Sync All Settings'),
    sync_all_settings_help: language('Sync All Settings help','AG Sync All settings'),
    select_all_settings: language('Select all settings'),
    callerid: language('Caller ID'),

    failover_fxo: language('Failover fxo'),
    failover_fxo_help: language('Failover fxo help','When the SIP server registered with the gateway or gateway has a network failure, <br/>the SIP trunking or SIP relay that is registered on the gateway is not available and can be output directly from the PSTN line on the FXO'),
    sip_account: language('Sip Account'),
    sip_account_help: language('Sip Account help','The channel after receiving the user`s call request,<br/>on behalf of the user to initiate a new call to the<br/>associated SIP request.'),
    immediate_send_cid: language('Immediate Send Cid'),
    immediate_send_cid_help: language('Immediate Send Cid help','"#" is sent out immediately'),
    callout_min_interval: language('Callout Min Interval'),
    callout_min_interval_help: language('Callout Min Interval help','Callout Min interval (range: 400-10000ms, default: 2000ms)'),
    caller_id: language('Caller ID'),
    caller_id_help: language('Caller ID help','Set the caller ID'),
    extension_number: language('Extension Number'),
    extension_number_help: language('Extension Number help', 'Extension Number'),
    full_name: language('Full name'),
    full_name_help: language('Full name help', 'Set the full name of caller'),
    use_callerid: language('Use callerid'),
    use_callerid_help: language('Use callerid help', 'Use callerid or not'),
    hide_callerid: language('Hide callerid'),
    hide_callerid_help: language('Hide callerid help','Whether or not to hide outgoing caller ID.'),
    cid_signalling: language('CID signalling'),
    cid_signalling_help: language('CID signalling help','Type of caller ID signalling in use.'),
    dnd: language('DND'),
    dnd_help: language('dnd help', 'Do not disturb.'),
    cid_start_signal: language('CID start signal'),
    cid_start_signal_help: language('CID start signal help', 'Set the signals of start of caller ID<br/>ring = a ring signals the start (default)<br/>polarity = polarity reversal signals the start<br/>polarity_IN = polarity reversal signals the start, for India<br/>'),
    polarity: language('Polarity'),
    answer_on_polarity_switch: language('Answer on polarity switch'),
    answer_on_polarity_switch_help: language('Answer on polarity switch help','Use a polarity reversal to mark when a outgoing call is answered by the remote party.'),
    hangup_on_polarity_switch: language('Hangup on polarity switch'),
    hangup_on_polarity_switch_help: language('Hangup on polarity switch help','In some countries, a polarity reversal is used to signal the disconnect of a<br/>phone line.  If this option is selected, the call will be considered hung up <br/>on a polarity reversal. '),
    polarity_on_answer_delay: language('Polarity on answer delay'),
    polarity_on_answer_delay_help: language('Polarity on answer delay help','Minimal time period (ms) between the answer polarity switch and hangup polarity switch. <br/>(default: 600ms)<br/>'),
    delay_reply_200_ok_switch: language('Delay reply 200 OK switch'),
    delay_reply_200_ok_switch_help: language('Delay reply 200 OK switch help','It is invalid when start polarity; <br/>On: delay timer to reply 200 ok; <br/>Off: immediately reply 200 ok. <br/>default is off. <br/>'),
    delay_reply_200_ok_timer: language('Delay reply 200 OK timer'),
    delay_reply_200_ok_timer_help: language('Delay reply 200 OK timer help', 'Delay reply 200 OK timer'),
    call_feature: language('Call feature'),
    call_waiting: language('Call waiting'),
    call_waiting_help: language('Call waiting help','Turn on/off call waiting function. <br/>'),
    three_way_calling: language('Three way calling'),
    three_way_calling_help: language('Three way calling help','Turn on/off three way calling function. <br/>'),
    call_transfer: language('Call transfer'),
    call_transfer_help: language('Call transfer help','Turn on/off call transfer function. <br/>'),
    call_forward: language('Call forward'),
    call_forward_help: language('Call forward help','Turn on/off call forward function. <br/>'),
    call_forward_number: language('Call forward number'),
    call_forward_number_help: language('Call forward number help','Set the call forward number. <br/>'),
    callerid_detect: language('CallerID detect'),
    cidbeforering: language('cidbeforering'),
    cidbeforering_help: language('cidbeforering help','Swith to handle irregular CID function.'),
    internal_exten_number: language('Internal Exten Number'),
    internal_exten_number_help: language('Internal Exten Number help','Internal Exten Number'),

    //Pickup-setting
    pickup_settings: language('Pickup Settings'),
    timeout: language('Time Out'),
    timeout_help: language('Time Out help', 'Time Out'),
    number: language('Number'),
    number_help: language('Number help','Number'),
    status_settings: language('Status Settings'),
    disabled: language('Disabled'),
    enabled: language('Enabled'),

    //Dialtable
    dial_matching_rule_help: language('Dial Matching Rule help', 'Dial Matching rule may be numbers, letters, or combinations thereof. If an rule is prefixed by a \'_\' character, it is interpreted as a pattern rather than a literal.  In patterns, some characters have special meanings: &#10;&#10;     X - any digit from 0-9 &#10;     Z - any digit from 1-9 &#10;     N - any digit from 2-9 &#10;     [1235-9] - any digit in the brackets (in this example, 1,2,3,5,6,7,8,9) &#10;     ! - wildcard, causes the matching process to complete as soon as ;it can unambiguously determine that no other matches are possible&#10;&#10;For example, the rule _NXXXXXX would match normal 7 digit dialings, while _1NXXNXXXXXX would represent an area code plus phone number preceded by a one.'),

    //Module-Advanced
    tone_duration: language('Tone duration'),
    tone_duration_help: language('Tone duration help','How long generated tones (DTMF and MF) will be played on the channel.<br/>(in milliseconds).'),
    tone_interval: language('Tone interval'),
    tone_interval_help: language('Tone interval help','How long between tone and tone will be played on the channel.<br/>(in milliseconds).'),
    dial_timeout: language('Dial timeout'),
    dial_timeout_help: language('Dial timeout help','Specifies the number of seconds we attempt to dial the specified devices. <br/>'),
    echo_cancel_tap_length: language('Echo cancel tap length'),
    echo_cancel_tap_length_help: language('Echo cancel tap length help','Hardware echo canceler tap length. <br/>'),
    echo_type: language('Echo Type'),
    echo_type_help: language('Echo Type help','Echo Type'),
    echo_mode: language('Echo Mode'),
    echo_mode_help: language('Echo Mode help', 'Echo Mode'),
    mode: language('Mode'),
    mode_help: language('Mode help','Set the transmission mode.'),
    adaptive: language('Adaptive'),
    t38: language('T.38'),
    pass_through: language('Pass-through'),
    rate: language('Rate'),
    rate_help: language('Rate help@alg-glbsettings','Set the rate of sending and receiving.'),
    ecm: language('Ecm'),
    ecm_help: language('Ecm help','Enable/disable T.30 ECM (error correction mode) by default.<br/>'),
    country: language('Country'),
    country_help: language('Country help@alg-glbsettings','Configuration for location specific tone indications. <br/>'),
    ring_cadence: language('Ring cadence'),
    ring_cadence_help: language('Ring cadence help','List of durations the physical bell rings.<br/>'),
    dial_tone: language('Dial tone'),
    dial_tone_help: language('Dial tone help','Set of tones to be played when one picks up the hook.<br/>'),
    ring_tone: language('Ring tone'),
    ring_tone_help: language('Ring tone help','Set of tones to be played when the receiving end is ringing.<br/>'),
    busy_tone: language('Busy tone'),
    busy_tone_help: language('Busy tone help','Set of tones played when the receiving end is busy.<br/>'),
    call_waiting_tone: language('Call waiting tone'),
    call_waiting_tone_help: language('Call waiting tone help','Set of tones played when there is a call waiting in the background.<br/>'),
    congestion_tone: language('Congestion tone'),
    congestion_tone_help: language('Congestion tone help','Set of tones played when there is some congestion<br/>'),
    dial_recall_tone: language('Dial recall tone'),
    dial_recall_tone_help: language('Dial recall tone help','Many phone systems play a recall dial tone after hook flash. <br/>'),
    record_tone: language('Record tone'),
    record_tone_help: language('Record tone help','Set of tones played when call recording is in progress.<br/>'),
    info_tone: language('Info tone'),
    info_tone_help: language('Info tone help','Set of tones played with special information messages (e.g., "number is out of service")<br/>'),
    stutter_tone: language('Stutter tone'),
    stutter_tone_help: language('Stutter tone help','Stutter tone'),
    global_settings: language('Global settings'),
    FXS_signaling: language('FXS Signaling'),
    FXS_signaling_help: language('FXS Signaling help','FXS Signaling'),
    glbSetting_restart_help: language("GlbSetting Restart help", "Your settings need to be restarted dahdi to take effect. Are you sure to restart the dahdi?"),

    austria: language('Austria'),
    bulgaria: language('Bulgaria'),
    brazil: language('Brazil'),
    belgium: language('Belgium'),
    switzerland: language('Switzerland'),
    chile: language('Chile'),
    china: language('China'),
    czech_republic: language('Czech Republic'),
    germany: language('Germany'),
    denmark: language('Denmark'),
    estonia: language('Estonia'),
    spain: language('Spain'),
    finland: language('Finland'),
    france: language('France'),
    greece: language('Greece'),
    hungary: language('Hungary'),
    israel: language('Israel'),
    india: language('India'),
    italy: language('Italy'),
    lithuania: language('Lithuania'),
    japan: language('Japan'),
    mexico: language('Mexico'),
    malaysia: language('Malaysia'),
    netherlands: language('Netherlands'),
    norway: language('Norway'),
    philippines: language('Philippines'),
    poland: language('Poland'),
    portugal: language('Portugal'),
    russian_federation: language('Russian Federation / ex Soviet Union'),
    sweden: language('Sweden'),
    thailand: language('Thailand'),
    united_kingdom: language('United Kingdom'),
    united_states: language('United States / North America'),
    united_states_cirac: language('United States Circa 1950/ North America'),
    venezuela: language('Venezuela / South America'),
    south_africa: language('South Africa'),
    custom: language('Custom'),

    //Funkeys
    none_keys_blind_transfer: language('None Keys Blind Transfer'),
    none_keys_blind_transfer_help: language('None Keys Blind Transfer help','Turn on the switch: A calls B, A press *38(can be customized) and calls C phone number, C picks up and talk with A.<br/>Turn off the switch: A calls B, A press *38(can be customized) and calls C phone number, A hangs up,C picks up and talk with B.'),
    blind_transfer: language('Blind Transfer'),
    blind_transfer_help: language('Blind Transfer help','When turn on the Blind Transfer, configure the dialplan before transferring the call (*38 by default).'),
    asked_transfer: language('Asked Transfer'),
    asked_transfer_help: language('Asked Transfer help','When turn on the Asked Transfer, configure the dialplan before transferring the call (*38 by default).'),
    function_keys: language('Function Keys'),

    //FXO
    fxo_settings: language('FXO settings'),
    busy_detect: language('Busy detect'),
    busy_detect_help: language('Busy detect help','Busy Detection is used for detecting busy signal or far end hang-up. <br/>'),
    busy_count: language('Busy count'),
    busy_count_help: language('Busy count help','Configure the number of busy tones the user will hear before hanging up the call when Busy Detect is enabled. <br/>'),
    busy_country: language('Busy country'),
    busy_country_help: language('Busy country help','Select country for tone settings. <br/>'),
    korea: language('Korea'),
    usa: language('USA'),
    fxo_monitor: language('Fxo Monitor'),
    fxo_monitor_help: language('Fxo Monitor help','Turn on/off fxo monitor function. <br/>'),
    busy_tone_pattern: language('Busy tone pattern'),
    busy_tone_pattern_help: language('Busy tone pattern help','Set the busy tone pattern. <br/> eg: 550/250,0/250 <br/>'),
    add_more_busy_pattern_fields: language('Add More Busy Pattern Fields'),
    silence_detect: language('Silence detect'),
    silence_detect_help: language('Silence detect help','Turn on/off silence detect function. <br/>'),
    silence_threshold: language('Silence threshold'),
    silence_threshold_help: language('Silence threshold help','What we consider silence: the lower, the more sensitive, eg: 250 is 250ms.<br/>Range: 100 to 500(100 to 500ms), default: 250<br/>'),
    max_silence: language('Max silence'),
    max_silence_help: language('Max silence help','How many silencethreshold of silence before hanging up(eg: 16 is 250ms * 16 = 4s).<br/>Range: 2 to 1020(200ms to 512s), default: 80(20s)<br/>'),
    rx_threshold: language('Rx threshold'),
    rx_threshold_help: language('Rx threshold help','Range: -20 dBm0 to -40 dBm0, default: 20 (-20 dBm0), all values are understood to be negative.<br/>'),
    tx_threshold: language('Tx threshold'),
    tx_threshold_help: language('Tx threshold help','Range: -20 dBm0 to -40 dBm0, default: 20 (-20 dBm0), all values are understood to be negative.<br/>'),
    dahdi_parameters: language('Dahdi parameters'),
    polaritydebounce: language('Polaritydebounce'),
    polaritydebounce_help: language('Polaritydebounce help','The time of Polaritydebounce. Range: from 0 ms to 2048 ms, the default is 64 ms. <br/>'),
    ringdebounce: language('ringdebounce'),
    ringdebounce_help: language('ringdebounce help', 'The time of ringdebounce. Range: from 0 ms to 2048 ms, the default is 64 ms. <br/>'),
    ringoncount: language('ringoncount'),
    ringoncount_help: language('ringoncount help', 'Counting the times of ring on. Range: from 0 to 128, the default is 16. <br/>'),
    ringoffcount: language('ringoffcount'),
    ringoffcount_help: language('ringoffcount help','Counting the times of ring off. Range: from 0 to 128, the default is 0. <br/>'),
    times: language('times'),

    //FXS
    fxs_settings: language('FXS settings'),
    the_pattern_of_sending_cid: language('The pattern of sending CID'),
    the_pattern_of_sending_cid_help: language('The pattern of sending CID help','Some countries(UK) have ring tones with different ring tones(ring-ring), which means the caller ID needs to be set later on, and not just after the first ring, as per the default(1).<br/>'),
    send_cid_before_ring: language('send CID before ringing'),
    send_cid_after_first_ring: language('send CID after first ring'),
    send_cid_after_second_ring: language('send CID after second ring'),
    send_cid_after_third_ring: language('send CID after third ring'),
    waiting_time_before_sending_cid: language('Waiting time before sending CID'),
    waiting_time_before_sending_cid_help: language('Waiting time before sending CID help','How long we will waiting before sending the CID on the channel.(in milliseconds).'),
    send_polarity_reversal: language('Send polarity reversal','Sending polarity reversal(DTMF Only)'),
    send_polarity_reversal_help: language('Send polarity reversal help','Send polarity reversal before sending the CID on the channel.'),
    start_code: language('Start code'),
    start_code_help: language('Start code help','Start code.'),
    stop_code: language('Stop code'),
    stop_code_help: language('Stop code help','Stop code.'),
    flash_wink: language('Flash/Wink'),
    flash_wink_help: language('Flash/Wink help','Turn on/off Flash/Wink. <br/>'),
    min_flash_time: language('Min flash time'),
    min_flash_time_help: language('Min flash time help','Min flash time. (in milliseconds). Range:1-100.<br/>'),
    max_flash_time: language('Max flash time'),
    max_flash_time_help: language('Max flash time help','Max flash time. (in milliseconds). Range:100-3000.<br/>'),
    as_ending_dial_key: language('as Ending Dial Key'),
    as_ending_dial_key_help: language('as Ending Dial Key help','Turn on/off Ending Dial Key. <br/>'),
    display_extension_number: language('Display extension number'),
    display_extension_number_help: language('Display extension number help','Turn on/off display extension number. <br/>'),
    other_parameters: language('Other Parameters'),
    offhook_antishake: language('offhook-antishake'),
    offhook_antishake_help: language('offhook-antishake help', 'The anti-jitter delay value when the gateway FXS port detects the off-hook signal. The setting value is from 32ms to 2048ms (multiple of 32) and the default value is 64ms. <br/>'),

    //Driver
    cidbuflen: language('cidbuflen'),
    cidbuflen_help: language('cidbuflen help', 'CID media stream length byte size.'),
    cutcidbufheadlen: language('cutcidbufheadlen'),
    cutcidbufheadlen_help: language('cutcidbufheadlen help', 'CID media stream header length byte size.'),
    fixedtimepolarity: language('fixedtimepolarity'),
    fixedtimepolarity_help: language('fixedtimepolarity help', 'Transmit polarity line reversal signal delay time.'),
    current_threshold: language('Current Threshold'),
    current_threshold_help: language('Current Threshold help','Range: 1-65535'),
    codec: language('Codec'),
    codec_help: language('Codec help','Set the global encoding:mulaw,alaw<br/>'),
    impedance: language('Impedance'),
    impedance_help: language('Impedance help','Configuration for impedance. <br/>'),
    hardware_gain: language('Hardware gain'),
    fxo_rx_gain: language('FXO Rx gain'),
    fxo_rx_gain_help: language('FXO Rx gain help','Set FXO to terminal gain. Range: from -150 to 120, the default is 0. <br/>'),
    fxo_tx_gain: language('FXO Tx gain'),
    fxo_tx_gain_help: language('FXO Tx gain help','Set FXO to IP gain. Range: from -150 to 120, the default is 0. <br/>'),
    fxs_rx_gain: language('FXS Rx gain'),
    fxs_rx_gain_help: language('FXS Rx gain help','Set FXS to terminal gain. Range: -35, 0 or 35. the default is 0. <br/>'),
    fxs_tx_gain: language('FXS Tx gain'),
    fxs_tx_gain_help: language('FXS Tx gain help','Set FXS to IP gain. Range: -35, 0 or 35. the default is 0. <br/>'),

    FCC: language('FCC'),
    TBR21: language('TBR21'),
    ARGENTINA: language('ARGENTINA'),
    AUSTRALIA: language('AUSTRALIA'),
    AUSTRIA: language('AUSTRIA'),
    BAHRAIN: language('BAHRAIN'),
    BELGIUM: language('BELGIUM'),
    BRAZIL: language('BRAZIL'),
    BULGARIA: language('BULGARIA'),
    CANADA: language('CANADA'),
    CHILE: language('CHILE'),
    CHINA: language('CHINA'),
    COLOMBIA: language('COLOMBIA'),
    CROATIA: language('CROATIA'),
    CYPRUS: language('CYPRUS'),
    CZECH: language('CZECH'),
    DENMARK: language('DENMARK'),
    ECUADOR: language('ECUADOR'),
    EGYPT: language('EGYPT'),
    ELSALVADOR: language('ELSALVADOR'),
    FINLAND: language('FINLAND'),
    FRANCE: language('FRANCE'),
    GERMANY: language('GERMANY'),
    GREECE: language('GREECE'),
    GUAM: language('GUAM'),
    HONGKONG: language('HONGKONG'),
    HUNGARY: language('HUNGARY'),
    ICELAND: language('ICELAND'),
    INDIA: language('INDIA'),
    INDONESIA: language('INDONESIA'),
    IRELAND: language('IRELAND'),
    ISRAEL: language('ISRAEL'),
    ITALY: language('ITALY'),
    JAPAN: language('JAPAN'),
    JORDAN: language('JORDAN'),
    KAZAKHSTAN: language('KAZAKHSTAN'),
    KUWAIT: language('KUWAIT'),
    LATVIA: language('LATVIA'),
    LEBANON: language('LEBANON'),
    LUXEMBOURG: language('LUXEMBOURG'),
    MACAO: language('MACAO'),
    MALAYSIA: language('MALAYSIA'),
    MALTA: language('MALTA'),
    MEXICO: language('MEXICO'),
    MOROCCO: language('MOROCCO'),
    NETHERLANDS: language('NETHERLANDS'),
    NEWZEALAND: language('NEWZEALAND'),
    NIGERIA: language('NIGERIA'),
    NORWAY: language('NORWAY'),
    OMAN: language('OMAN'),
    PAKISTAN: language('PAKISTAN'),
    PERU: language('PERU'),
    PHILIPPINES: language('PHILIPPINES'),
    POLAND: language('POLAND'),
    PORTUGAL: language('PORTUGAL'),
    ROMANIA: language('ROMANIA'),
    RUSSIA: language('RUSSIA'),
    SAUDIARABIA: language('SAUDIARABIA'),
    SINGAPORE: language('SINGAPORE'),
    SLOVAKIA: language('SLOVAKIA'),
    SLOVENIA: language('SLOVENIA'),
    SOUTHAFRICA: language('SOUTHAFRICA'),
    SOUTHKOREA: language('SOUTHKOREA'),
    SPAIN: language('SPAIN'),
    SWEDEN: language('SWEDEN'),
    SWITZERLAND: language('SWITZERLAND'),
    SYRIA: language('SYRIA'),
    TAIWAN: language('TAIWAN'),
    THAILAND: language('THAILAND'),
    UAE: language('UAE'),
    UK: language('UK'),
    USA: language('USA'),
    YEMEN: language('YEMEN'),

    //Voip-endpoint
    credentials: language('Credentials'),
    add_new_sip_endpoint: language('Add New SIP Endpoint'),
    readonly: language('Readonly'),
    edit_sip_endpoint: language('Edit SIP Endpoint'),
    main_endpoint_settings: language('Main Endpoint Settings'),
    anonymous: language('Anonymous'),
    registration_help: language('Registration help@sip-endpoints','Whether this endpoint will register to this gateway or this gateway to the endpoint.'),
    none: language('_None'),
    server: language('Server'),
    server_help: language('Server help','Endpoint registers with this gateway'),
    client: language('Client'),
    client_help: language('Client help','This gateway registers with the endpoint'),
    hostname_or_ipaddress: language('Hostname or IP Address'),
    hostname_or_ipaddress_help: language('Hostname or IP Address help','IP address or hostname of the endpoint or \'dynamic\' if the endpoint has a dynamic IP address.<br/>This will require registration.<br>Notice: If the input here is hostname and your DNS has changed, you must <span style="color:rgb(255,0,0)">reboot asterisk'),
    backup_hostname_or_ip: language('Backup Hostname or IP Address'),
    backup_hostname_or_ip_help: language('Backup Hostname or IP Address help','IP address or hostname of the endpoint or \'dynamic\' if the endpoint has a dynamic IP address.<br/>This will require registration.<br>Notice: If the input here is hostname and your DNS has changed, you must <span style="color:rgb(255,0,0)">reboot asterisk'),
    transport: language('Transport'),
    transport_help: language('Transport help','This sets the possible transport types for outgoing. Order of usage, <br/>when the respective transport protocols are inabled, is UDP, TCP, TLS.<br/>The first enabled transport type is only used for outbound messages until a<br/>Registration takes place. During the peer Registration the transport type <br/>may change to another supported type if the peer requests so.'),
    nat_traversal: language('NAT Traversal'),
    nat_traversal_help: language('NAT Traversal help','Addresses NAT-related issues in incoming SIP or media sessions.'),
    subscribe_for_mwi: language('SUBSCRIBE for MWI'),
    subscribe_for_mwi_help: language('MWI help@sip-endpoints','Whether or not to subscribe to receive the MWI.'),
    vos_encryption: language('VOS Encryption'),
    vos_encryption_help: language('VOS Encryption help@sip-endpoints','Whether or not to enable VOS Encryption.'),
    stun_switch: language('STUN Switch'),
    stun_switch_help: language('STUN Switch help', 'You need to turn on the stun switch on the SIP advanced settings page to take effect'),
    force_report_on: language('Force report on'),
    report_requested_comedia: language('Report if requested and comedia'),
    no: language('_No'),
    yes: language('_Yes'),
    advanced_registration: language('Advanced:Registration Options'),
    authentication_user: language('Authentication User'),
    authentication_user_help: language('Authentication User help','A username to use only for registration.'),
    register_extension: language('Register Extension'),
    register_extension_help: language('Register Extension help','When Gateway registers as a SIP user agent to a SIP proxy(provider), <br/>calls from this provider connect to this local extension.'),
    modify: language('Modify'),
    register_user: language('Register User'),
    register_user_help: language('Register User help','Register user name , <br/>it is the user of register => user[:secret[:authuser]]@host[:port][/extension].'),
    from_user: language('From User'),
    from_user_help: language('From User help','A username to identify the gateway to this endpoint.'),
    from_domain: language('From Domain'),
    from_domain_help: language('From Domain help','A domain to identify the gateway to this endpoint.'),
    qualify: language('Qualify'),
    qualify_help: language('Qualify help@sip-endpoints','Whether or not to check the endpoint\'s connection status.'),
    qualify_frequency: language('Qualify Frequency'),
    qualify_frequency_help: language('Qualify Frequency help','How often, in seconds, to check the endpoint\'s connection status.'),
    outbound_proxy: language('Outbound Proxy'),
    outbound_proxy_help: language('Outbound Proxy help','A proxy to which the gateway will send all outbound signaling instead of sending signaling directly to endpoints.'),
    custom_registery: language('Custom Registery'),
    custom_registery_help: language('Custom Registery help','Custom Registery On / Off.'),
    registery_string: language('Registery String'),
    registery_string_help: language('Registery String help','Context of registery. user[:secret[:authuser]]@host[:port][/extension] </br>eg: 1001@sip.com:pbx122@172.16.6.122/1001 </br>'),
    enable_outboundproxy_to_host: language('Enable Outboundproxy to Host'),
    enable_outboundproxy_to_host_help: language('Custom Registery help','Outboundproxy to Host On / Off.'),
    tlsverify: language('tlsverify'),
    tlsverify_help: language('tlsverify help','enable TLS verify or disable.'),
    tlssetup: language('tlssetup'),
    tlssetup_help: language('tlssetup help','Whether we are willing to accept connections, connect to the other party, or both.'),
    tlsprivatekey: language('tlsprivatekey'),
    tlsprivatekey_help: language('tlsprivatekey help','Private key file (*.pem format only) for TLS connections. If no tlsprivatekey is specified, tlscertfile is searched for both public and private key.'),
    encryption: language('encryption'),
    encryption_help: language('encryption help','Whether to offer SRTP encrypted media (and only SRTP encrypted media) on outgoing calls to a peer. Calls will fail with HANGUPCAUSE=58 if the peer does not support SRTP. Defaults to no.'),
    call_settings: language('Call Settings'),
    dtmf_settings: language('DTMF Settings'),
    dtmf_mode: language('DTMF Mode'),
    dtmf_mode_help: language('DTMF Mode help','Set default dtmfmode for sending DTMF. Default:rfc2833. <br/>Other options: \'info\', SIP INFO message(application/dtmf-relay);<br/>\'inband\',Inband audio(require 64kbit codec -alaw,ulaw).'),
    rfc2833: language('RFC2833'),
    inband: language('Inband'),
    info: language('Info'),
    call_limit_help: language('Call Limit help','Setting a call-limit will cause calls above the limit not to be accepted.'),
    caller_id_settings: language('Caller ID Settings'),
    trust_id: language('Trust Remote-Party-ID'),
    trust_id_help: language('Trust Remote-Party-ID help','Whether or not the Remote-Party-ID header should be trusted.'),
    send_remote_party_id: language('Send Remote-Party-ID'),
    send_remote_party_id_help: language('Send Remote-Party-ID help','Whether or not to send the Remote-Party-ID header.'),
    rpid: language('Rpid'),
    pai: language('Pai'),
    remote_party_id_format: language('Remote Party ID Format'),
    remote_party_id_format_help: language('Remote Party ID Format help','How to set the Remote-Party-ID header: from Remote-Party-ID or from P-Asserted-Identity.'),
    p_asserted_identity_header: language('P-Asserted-Identity Header'),
    remote_party_id_header: language('Remote-Party-ID Header'),
    caller_id_presentation: language('Caller ID Presentation'),
    caller_id_presentation_help: language('Caller ID Presentation help','Whether or not to display Caller ID.'),
    allowed_not_screen: language('Allowed,not screened'),
    allowed_passed_screen: language('Allowed,passed screen'),
    allowed_failed_screen: language('Allowed,failed screen'),
    allowed: language('Allowed'),
    prohib_not_screen: language('Prohibited,not screened'),
    prohib_passed_screen: language('Prohibited,passed screen'),
    prohib_failed_screen: language('Prohibited,failed screen'),
    prohibited: language('Prohibited'),
    unavailable: language('Unavailable'),
    advanced_signaling_settings: language('Advanced:Signaling Settings'),
    progress_inband: language('Progress Inband'),
    progress_inband_help: language('Progress Inband help','If we should generate in-band ringing. <br/>Always use \'never\' to never use in-band signalling, even in cases where some buggy devices might not render it.<br/>Valid values: yes, no, never. <br/>Default: never.'),
    never: language('Never'),
    allow_overlap_dialing: language('Allow Overlap Dialing'),
    allow_overlap_dialing_help: language('Allow Overlap Dialing help','Allow Overlap Dialing: Whether or not to allow overlap dialing. <br/>Disabled by default.'),
    append_user: language('Append user'),
    phone_to_url: language('phone to URI'),
    phone_to_url_help: language('phone to URI help','Whether or not to add \';user=phone\' to URIs that contain a valid phone number.'),
    add_reason_header: language('Add Q.850 Reason Headers'),
    add_reason_header_help: language('Add Q.850 Reason Headers help','Whether or not to add Reason header and to use it if it is available.'),
    honor_sdp_version: language('Honor SDP Version'),
    honor_sdp_version_help: language('Honor SDP Version help','By default, the gateway will honor the session version number in SDP packets and will only modify the SDP session if the version number changes. <br/>Turn this option off to force the gateway to ignore the SDP session version number and treat all SDP data as new data. <br/>This is required for devices that send non-standard SDP packets (observed with Microsoft OCS). <br/>By default this option is on.'),
    allow_transfers: language('Allow Transfers'),
    allow_transfers_help: language('Allow Transfers help','Whether or not to globally enable transfers. <br/>Choosing \'no\' will disable all transfers (unless enabled in peers or users). <br/>Default is enabled.'),
    allow_promiscuous_redirects: language('Allow Promiscuous Redirects'),
    allow_promiscuous_redirects_help: language('Allow Promiscuous Redirects help','Whether or not to allow 302 or REDIR to non-local SIP address. <br/>Note that promiscredir when redirects are made to the local system will cause loops since this gateway is incapable of performing a hairpin call.'),
    max_forwards: language('Max Forwards'),
    max_forwards_help: language('Max Forwards help','Setting for the SIP Max-Forwards header (loop prevention).'),
    send_trying_on_register: language('Send TRYING on REGISTER'),
    send_trying_on_register_help: language('Send TRYING on REGISTER help','Send a 100 Trying when the endpoint registers.'),
    advanced_timer_settings: language('Advanced:Timer Settings'),
    default_t1_timer: language('Default T1 Timer'),
    default_t1_timer_help: language('Default T1 Timer help','This timer is used primarily in INVITE transactions. <br/>The default for Timer T1 is 500 ms or the measured run-trip time between the gateway and the device if you have qualify=yes for the device.'),
    call_setup_timer: language('Call Setup Timer'),
    call_setup_timer_help: language('Call Setup Timer help','If a provisional response is not received in this amount of time, the call will autocongest. <br/>Defaults to 64 times the default T1 timer.'),
    session_timers: language('Session Timers'),
    session_timers_help: language('Session Timers help','Session-Timers feature operates in the following three modes: originate, Request and run session-timers always;<br/>accept, Run session-timers only when requested by other UA; refuse, <br/>Do not run session timers in any case.'),
    accept: language('Accept'),
    originate: language('Originate'),
    refuse: language('Refuse'),
    minimun_session_refresh_interval: language('Minimum Session Refresh Interval'),
    minimun_session_refresh_interval_help: language('Minimum Session Refresh Interval help','Minimum session refresh interval in seconds. Defualts to 90 secs.'),
    maximun_session_refresh_interval: language('Maximum Session Refresh Interval'),
    maximun_session_refresh_interval_help: language('Maximum Session Refresh Interval help','Maximum session refresh interval in seconds. Defaults to 1800s.'),
    session_refresher: language('Session Refresher'),
    session_refresher_help: language('Session Refresher help','The session refresher, uac or uas. Defaults to uas.'),
    media_setting: language('Media Settings'),
    media_setting_help: language('Media Settings help','Select codec from the drop down list. Codecs should be different for each Codec Priority.'),
    codec_priority: language('Codec Priority'),

    //Sip-bendpoints
    fxs_batch_bind_sip: language('FXS Batch Binding SIP'),
    choose_file: language('Choose File'),
    file_import_tips: language('File_import_tips','Click upload!(Please import the txt file!)<br>format:<br>Num,Username,Password,Hostname,Hosename-backup,Port,Vos,Codec,Support;<br>eg:<br>1,301,123abc,172.16.99.1,172.16.99.2,8,No,G.711 u-law,solo;<br>'),
    import: language('Import'),
    file_sample: language('Download Samples'),
    download_samples_tips: language('Download_samples_tips', 'Please upload this download file after decompress it'),
    port_name: language('Port Name'),
    hostname_or_ip_address: language('Hostname or IP Address'),
    support_codec: language('Support Codec'),
    autopassword: language('AutoPassword'),
    solo: language('Solo'),
    batch: language('Batch'),

    //Sip-batch-endpoints
    id: language('ID'),
    vos: language('VOS Encrytion'),
    register_mode: language('Register Mode'),
    browser_warning: language("Browser_warning", "Your browser version is too old to support this widget, please upgrade your browser"),

    //Sip-adv-settings
    udp_bind_port: language('UDP Bind Port'),
    udp_bind_port_help: language('UDP Bind Port help','Choose a port on which to listen for UDP traffic.'),
    enable_tcp: language('Enable TCP'),
    enable_tcp_help: language('Enable TCP help','Enable server for incoming TCP connection(default is no).'),
    tcp_bind_port: language('TCP Bind Port'),
    tcp_bind_port_help: language('TCP Bind Port help','Choose a port on which to listen for TCP traffic.'),
    tcp_authentication_timeout: language('TCP Authentication Timeout'),
    tcp_authentication_timeout_help: language('TCP Authentication Timeout help','The maximum number of seconds a client has to authenticate.<br/>If the client does not authenticate before this timeout expires,<br/>the client will be disconnected.(default value is: 30 seconds)'),
    tcp_authentication_limit: language('TCP Authentication Limit'),
    tcp_authentication_limit_help: language('TCP Authentication Limit help','The maiximum number of unauthenticated sessions that will be<br/> allowed to connect at any given time.(default is:50)'),
    enable_hostname_lookup: language('Enable Hostname Lookup'),
    enable_hostname_lookup_help: language('Enable Hostname Lookup help','Enable DNS SRV lookups on outbound calls Note: the gateway only<br/> uses the first host in SRV records Disabling DNS SRV lookups disables<br/>the ability to place SIP calls based on domain names to some other SIP<br/>users on the Internet Sepcifying a port in a SIP peer definition or when<br/>dialing outbound calls with supress SRV lookups for that peer or call.'),
    nat_settings: language('NAT Settings'),
    local_network: language('Local Network'),
    local_network_help: language('Local Network help','Format:192.168.0.0/255.255.0.0 or 172.16.0.0./12<br/>A list of IP address or IP ranges which are located inside a NATed network.<br/> This gateway will replace the internal IP address in SIP and SDP messages with<br/> the extenal IP address when a NAT exists between the gateway and other endpoings.'),
    local_network_list: language('Local Network List'),
    local_network_list_help: language('Local Network List help','Local IP address list that you added.'),
    ip_range: language('IP Range'),
    subscribe_network_change_event: language('Subscribe Network Change Event'),
    subscribe_network_change_event_help: language('Subscribe Network Change Event help','Through the use of the test_stun_monitor module, the gateway has the ability to detect when<br/>the perceived external network address has changed. When the stun_monitor is installed and <br/>configured, chan_sip will renew all outbound registrations when the monitor detects any sort<br/>of network change has occurred. By default this option is enabled, but only takes effect once<br/>res_stun_monitor is configured. If res_stun_monitor is enabled and you wish to not generate all<br/>outbound registrations on a network change,use the option below to disable this feature.'),
    match_external_address_locally: language('Match External Address Locally'),
    match_external_address_locally_help: language('Match External Address Locally help','Only substitute the externaddr or externhost setting if it matches.'),
    dynamic_exclude_static: language('Dynamic Exclude Static'),
    dynamic_exclude_static_help: language('Dynamic Exclude Static help','Disallow all dynamic hosts from registering as any IP address<br/> used for staticly defined hosts. This helps avoid the configuration<br/>error of allowing your users to register at the same address as a SIP provider.'),
    externally_mapped_tcp_port: language('Externally Mapped TCP Port'),
    externally_mapped_tcp_port_help: language('Externally Mapped TCP Port help','The externally mapped TCP port, when the gateway is behind a static NAT or PAT.'),
    external_address: language('External Address'),
    external_address_help: language('External Address help','The external address (and optional TCP port) of the NAT.<br>External Address = hostname[:port] specifies a static address[:port] to be used in SIP and SDP messages.Examples: <br>External Address = 12.34.56.78 <br>External Address = 12.34.56.78:9900 <br>'),
    external_hostname: language('External Hostname'),
    external_hostname_help: language('External Hostname help','The external hostname (and optional TCP port) of the NAT.<br>External Hostname = hostname[:port] is similar to "External Address". Examples: <br>External Hostname = foo.dyndns.net <br>'),
    hostname_refresh_internal: language('Hostname Refresh Interval'),
    hostname_refresh_internal_help: language('Hostname Refresh Interval help','How often to perform a hostname lookup. This can be useful when your NAT device<br/>lets you choose the port mapping, but the IP address is dynamic. Beware, you might<br/>suffer from service disruption when the name server resolution fails.'),
    rtp_settings: language('RTP Settings'),
    start_of_rtp_port_range: language('Start of RTP Port Range'),
    start_of_rtp_port_range_help: language('Start of RTP Port Range help','Start of range of port numbers to be used for RTP.'),
    end_of_rtp_port_range: language('End of RTP port Range'),
    end_of_rtp_port_range_help: language('End of RTP port Range help','End of range of port numbers to be used for RTP'),
    rtp_timeout: language('RTP Timeout'),
    rtp_timeout_help: language('RTP Timeout help','RTP Timeout'),
    strict_rfc_interpretation: language('Strict RFC Interpretation'),
    strict_rfc_interpretation_help: language('Strict RFC Interpretation help','Check header tags, character conversion in URIs, and multiline headers<br/>for strict SIP compatibility(default is yes)'),
    send_compact_headers: language('Send Compact Headers'),
    send_compact_headers_help: language('Send Compact Headers help','Send compact SIP headers.'),
    sdp_owner: language('SDP Owner'),
    sdp_owner_help: language('SDP Owner help','Allows you to change the username filed in the SDP owner string,（o=）.<br/>This filed MUST NOT contain spaces.'),
    matching_priority: language('Matching Priority'),
    matching_priority_help: language('Matching Priority'),
    from_number: language('From-Number'),
    extern_number: language('Extern-Number'),
    from_name: language('From-Name'),
    sip_methods: language('SIP Methods'),
    disallowed_sip_methods: language('Disallowed SIP Methods'),
    disallowed_sip_methods_help: language('Disallowed SIP Methods help','When a dialog is started with another SIP endpoint, the other endpoint<br/>should include an Allow header telling us what SIP methods the endpoint<br/>implements. However, some endpoints either do not include an Allow header<br/>or lie about what methods they implement.In the former case, the gateway<br/>makes the assumption that the endpoint supports all known SIP methods. If<br/>you know that your SIP endpoint does not provide support for a specific method,<br/>then you may provide a list of methods that your endpoint does not implement in the<br/>disallowed_methods option. Note that if your endpoint is truthful with its Allow header,<br/>then there is no need to set this option.'),
    Ack: language('Ack'),
    BYE: language('BYE'),
    CANCEL: language('CANCEL'),
    INFO: language('INFO'),
    INVITE: language('INVITE'),
    MESSAGE: language('MESSAGE'),
    NOTIFY: language('NOTIFY'),
    OPTIONS: language('OPTIONS'),
    PRACK: language('PRACK'),
    PUBLISH: language('PUBLISH'),
    REFER: language('REFER'),
    REGISTER: language('REGISTER'),
    SUBSCRIBE: language('SUBSCRIBE'),
    UPDATE: language('UPDATE'),
    hangup_cause_code: language('Hangup Cause Code'),
    hangup_cause_code_help: language('Hangup Cause Code help','Hangup Cause Code'),
    default: language('default'),
    _404: language('404 Not Found'),
    _420: language('420 No Route Destination'),
    _486: language('486 Busy Here'),
    _408: language('408 Request Timeout'),
    _480: language('480 Temporarily Unavailable'),
    _403: language('403 Forbidden'),
    _410: language('410 Gone'),
    _502: language('502 Bad Gateway'),
    _484: language('484 Address Incomplete'),
    _501: language('501 Not Implemented'),
    _500: language('500 Server Internal Failure'),
    _503: language('503 Service Unavailable'),
    _488: language('488 Not Acceptable Here'),
    _603: language('603 Declined'),
    shrink_caller_id: language('Shrink Caller ID'),
    shrink_caller_id_help: language('Shrink Caller ID help',"The shrinkcallerid function removes '(', ' ', ')', non-trailing '.',<br/>and '-' not in square brackets. For example,the caller id value 555.5555<br/>becomes 5555555 when this option is enabled. Disabling this option results<br/>in no modification of the caller id value,which is necessary when the caller<br/> id represents something that must be preserved. By default this option is on."),
    sip_from: language('SIP From'),
    sip_from_help: language('SIP From help','SIP From'),
    callee_id: language('Callee ID'),
    callee_id_help: language('Callee ID help','defalut: EXTEN<br/>eg: When selecting SIP To, Name is Jason and Number is 401.<br/>To mode is: "Jason"&lt;sip:401@172.16.6.239;transport=UDP&gt;'),
    sip_to: language('SIP To'),
    sip_to_help: language('SIP To help','Callee ID transfer.'),
    timer_configuration: language('Timer Configuration'),
    maximum_registration_expiry: language('Maximum Registration Expiry'),
    maximum_registration_expiry_help: language('Maximum Registration Expiry help','Maximum allowed time of incoming registrations and subscriptions (seconds)'),
    minimum_registration_expiry: language('Minimum Registration Expiry'),
    minimum_registration_expiry_help: language('Minimum Registration Expiry help','Minimum length of registrations/subscriptions (default 60)'),
    default_registration_expiry: language('Default Registration Expiry'),
    default_registration_expiry_help: language('Default Registration Expiry help','Default length of incoming/outgoing registration'),
    outbound_registrations: language('Outbound Registrations'),
    registration_timeout: language('Registration Timeout'),
    registration_timeout_help: language('Registration Timeout help','How often, in seconds, to retry registration calls. Default 20 seconds.'),
    number_of_registration_attempts: language('Number of Registration Attempts'),
    number_of_registration_attempts_help: language('Number of Registration Attempts help','Number of registration attempts before we give up. 0 = continue forever,<br/> hammering the other server until it accepts the registration. Default is 0 tries,<br/> continue forever'),
    authentication_settings: language('Authentication Settings'),
    match_auth_username: language('Match Auth Username'),
    match_auth_username_help: language('Match Auth Username help',"If available, match user entry using the 'username' field from the<br/> authentication line instead of the 'from' field."),
    realm: language('Realm'),
    realm_help: language('Realm help','Realm for digest authentication. Realms MUST be globally unique according<br/>to RFC 3261. Set this to your host name or domain name.'),
    use_domain_as_realm: language('Use Domain as Realm'),
    use_domain_as_realm_help: language('Use Domain as Realm help',"Use the domain from the SIP Domains setting as the realm.<br/>In this case, the realm will be based on the request 'to' or 'from'<br/> header and should match one of the domain. Otherwise, the configured 'realm'<br/> value will be used."),
    always_auth_reject: language('Always Auth Reject'),
    always_auth_reject_help: language('Always Auth Reject help',"When an incoming INVITE or REGISTER is to be rejected, <br/>for any reason, always reject with an identical response equivalent<br/> to valid username and invalid password/hash instead of letting the requester<br/> know whether there was a matching user or peer for their request. This reduces<br/>the ability of an attacker to scan for valid SIP usernames. This option is set<br/>to 'yes' by default."),
    authenticate_options_requests: language('Authenticate Options Requests'),
    authenticate_options_requests_help: language('Authenticate Options Requests help','Enabling this option will authenticate OPTIONS requests just<br/>like INVITE requests are. By default this option is disabled.'),
    guest_calling: language('Guest Calling'),
    allow_guest_calling: language('Allow Guest Calling'),
    allow_guest_calling_help: language('Allow Guest Calling help','Allow or reject guest calls (default is yes, to allow). If your gateway<br/> is connected to the Internet and you allow guest calls, you want to check<br/>which services you offer everyone out there, by enabling them in the default context.'),
    isdn_media_settings: language('ISDN Media Settings'),
    premature_media: language('Premature Media'),
    premature_media_help: language('Premature Media help',"Some ISDN links send empty media frames before the call is in ringing<br/> or progress state. The SIP channel will then send 183 indicating early<br/>media which will be empty - thus users get no ring signal. Setting this to<br/>\"yes\" will stop any media before we have call progress (meaning the SIP channel<br/>will not send 183 Session Progress for early media). Default is 'yes'. Also make<br/> sure that the SIP peer is configured with progressinband=never. In order for 'noanswer'<br/> applications to work, you need to run the progress() application in the priority before the app."),
    rtp_for_sip: language('RTP for SIP'),
    directmedia: language('directmedia'),
    directmedia_help: language('directmedia help','Redirect the RTP media stream to go directly from the caller to the callee or not.'),
    qos_tos: language('QoS/ToS'),
    tos_for_sip_packets: language('TOS for SIP Packets'),
    tos_for_sip_packets_help: language('TOS for SIP Packets help','Sets type of service for SIP packets.'),
    tos_for_rtp_packeds: language('TOS for RTP Packets'),
    tos_for_rtp_packeds_help: language('TOS for RTP Packets help','Sets type of service for RTP packets'),
    networking: language('Networking'),
    parsing_and_compatibility: language('Parsing and Compatibility'),
    security: language('Security'),
    security_and_media: language('Security and Media'),
    media: language('Media'),
    stun_settings: language('STUN Settings'),
    reflesh_request_interval: language('Reflesh Request Interval'),
    reflesh_request_interval_help: language('Reflesh Request Interval help', 'Reflesh Request Interval'),
    server_ip_domain_name: language('Server IP Adress/Domain Name'),
    server_ip_domain_name_help: language('Server IP Adress/Domain Name help', 'Server IP Adress/Domain Name'),

    //Sip-security
    sip_security: language('SIP Account Security'),
    edit_port: language('Edit Port'),
    tls_enable: language('TLS Enable'),
    tls_enable_help: language('TLS Enable help','Enable or disable DTLS-SRTP support.'),
    tls_verify_server: language('TLS Verify Server'),
    tls_verify_server_help: language('Enable TLS Verify Server help','Enable or disable tls verify server(default is no).'),
    tls_client_method: language('TLS Client Method'),
    tls_client_method_help: language('TLS Client Method help','values include tlsv1, sslv3, sslv2, Specify protocol for outbound client connections, default is sslv2.'),
    tlsv1: language('tlsv1'),
    sslv2: language('sslv2'),
    sslv3: language('sslv3'),
    upload_the_pem_file: language('Upload the pem file'),
    upload_the_pem_file_help: language('Upload the pem file'),
    upload_the_crt_file: language('Upload the crt file'),
    upload_the_crt_file_help: language('Upload the crt file'),
    file_name: language('File Name'),
    file_size: language('File Size'),
    operation: language('Operation'),
    tls_setting: language('TLS Setting'),
    key_files: language('Key Files'),
    key_name: language('Key Name'),
    organization: language('Organization'),
    create: language('Create'),
    tls_key: language('TLS Key'),
    upload_pem_help: language('Check Pem Format', 'The file you upload is not pem format, please upload file again.'),
    upload_crt_help: language('Check Crt Format', 'The file you upload is not crt format, please upload file again.'),

    //Call Routing Rules
    call_routing_rules: language('Call Routing Rules'),
    move: language('Move'),
    order: language('Order'),
    new_call_routing_rule: language('New Call Routing Rule'),
    save_order: language('Save Order'),
    call_ruleting_rule: language('Call Routing Rule'),
    routing_name: language('Routing Name'),
    routing_name_help: language('Routing Name help','The name of this route. Should be used to describe what types of calls this route matches(for example, \'SIP2GSM\' or \'GSM2SIP\').'),
    call_comes_in_from: language('Call Comes in From'),
    call_comes_in_from_help: language('Call Comes in From help','The launching point of incoming calls.'),
    send_call_throuth: language('Send Call Through'),
    send_call_throuth_help: language('Send Call Through help','The destination to receive the incoming calls.'),
    forceanswer: language('Force Answer'),
    forceanswer_help: language('Force Answer help','Force Answer'),
    authentication: language('Authentication'),
    authentication_help: language('Authentication help','Enable or disable password authentication.'),
    secondary_dialing: language('Secondary Dialing'),
    secondary_dialing_help: language('Secondary Dialing help','Enable or disable secondary dialing.'),
    disa_timeout: language('DISA Timeout'),
    disa_timeout_help: language('DISA Timeout help','Select the timemout range of 1 to 10 seconds.'),
    max_password_digits: language('Max Password Digits'),
    max_password_digits_help: language('Max Password Digits help','Restrict the max length of password.'),
    calleeid_and_callerid: language('CalleeID/callerID Manipulation'),
    calleeid_and_callerid_help: language('CalleeID Manipulation Help',''+
        'A Dial Pattern is a unique set of digits that will select this route and send the call to the designated trunks.   If a dialed pattern matches this route, no subsequent routes will be tried.<br/>   If Time Groups are enabled, subsequent routes will be checked for matches outside of the designated time(s).'+
        'Rules:<br>'+
        '<b>X</b> matches any digit from 0-9<br>'+
        '<b>Z</b> matches any digit from 1-9<br>'+
        '<b>N</b> matches any digit from 2-9<br>'+
        '<b>[1237-9]</b>        matches any digit in the brackets (example: 1,2,3,7,8,9)<br>'+
        '<b>.</b>&nbsp         wildcard, matches one or more dialed digits<br>'+
        '<br><b> Prepend:</b> &nbsp;&nbsp;&nbsp;Digits to prepend to a successful match.  If the dialed number matches the patterns specified by the subsequent columns, then this will be prepended before sending to the trunks. <br/>'+
        '<br><b>Prefix:</b> &nbsp;&nbsp;&nbsp;Prefix to remove on a successful match.  The dialed number is compared to this and the subsequent columns for a match. Upon a match, this prefix is removed from the dialed number before sending it to the trunks. <br/>'+
        '<br><b>Match Pattern :</b>&nbsp;&nbsp;&nbsp;  The dialed number will be compared against the  prefix + this match pattern. Upon a match, the match pattern portion of the dialed number will be sent to the trunks.<br/>'+
        '<br><b>SDfR(Stripped Digits from Right):</b> &nbsp;&nbsp;&nbsp;The amount of digits to be deleted from the right end of the number. If the value of this item exceeds the length of the current number, the whole number will be deleted. <br/>'+
        '<br><b>RDfR(Reserved Digits from Right):</b> &nbsp;&nbsp;&nbsp;The amount of digits to be resevered from the right end of the number. If the value of this item under the length of the current number, the whole number will be reserverd. <br/>'+
        '<br><b>StA(Suffix to Add) :</b> &nbsp;&nbsp;&nbsp;Designated information to be added to the right end of the current number.<br/>'+
        '<br><b>Caller Name :</b> &nbsp;&nbsp;&nbsp;What caller name would you like to set before sending this call to the endpoint.<br/>'+
        '<br><b>Disabled Caller Number Change :</b> &nbsp;&nbsp;Disable the caller number change, and fixed caller number match pattern.<br> '),
    add_more_dial_pattern: language('Add More Dial Pattern Fields'),
    time_patterns: language('Time Patterns that will use this Route'),
    time_patterns_help: language('Time Patterns that will use this Route help','Time Patterns that will use this Route'),
    add_more_time_pattern: language('Add More Time Pattern Fields'),
    change_rules: language('Change Rules'),
    forward_number: language('Forward Number'),
    forward_number_help: language('Forward Number help','What destination number will you dial? <br/>This is very useful when you have a transfer call.'),
    failover_call_through_number: language('Failover Call Through Number'),
    failover_call_through_number_help: language('Failover Call Through Number help','The gateway will attempt to send the call out each of these in the order you specify'),
    add_failover_call: language('Add a Failover Call Through Provider'),
    cid_number: language('Cid Number'),
    cid_number_help: language('Cid Number help','Cid Number'),
    dialing_delay: language('Dialing Delay'),
    dialing_delay_help: language('Dialing Delay help','The action of send calleeid will be delay <br/>when you creating a calling.'),
    modify_a_call_routing_rule: language('Modify a Call Routing Rule'),
    create_a_call_routing_rule: language('Create a Call Routing Rule'),
    call_routing_rule: language('Call Routing Rule'),
    disa_settings: language('DISA Settings'),
    advance_routing_rule: language('Advance Routing Rule'),
    cid_number_settings: language('Cid Number Settings'),
    prefix: language('Prefix'),
    pattern: language('Pattern'),
    sdrf: language('SDRF'),
    sta: language('sta'),
    rdfr: language('RdfR'),
    prepend: language('Prepend'),
    match_pattern: language('Match Pattern'),
    caller_name: language('Caller Name'),
    callee_dial_pattern: language('Callee Dial Pattern'),
    caller_dial_pattern: language('Caller Dial Pattern'),
    time_to_start: language('Time to start'),
    week_day_start: language('Week Day start'),
    month_day_start: language('Month Day start'),
    month_start: language('Month start'),
    time_to_finish: language('Time to finish'),
    week_day_finish: language('Week Day finish'),
    month_day_finish: language('Month Day finish'),
    month_finish: language('Month finish'),
    Monday: language('Monday'),
    Tuesday: language('Tuesday'),
    Wednesday: language('Wednesday'),
    Thursday: language('Thursday'),
    Friday: language('Friday'),
    Saturday: language('Saturday'),
    Sunday: language('Sunday'),
    January: language('January'),
    February: language('February'),
    March: language('March'),
    April: language('April'),
    May: language('May'),
    June: language('June'),
    July: language('July'),
    August: language('August'),
    September: language('September'),
    October: language('October'),
    November: language('November'),
    December: language('December'),
    any_time: language('Any Time'),

    //Group
    group_name: language('Group Name'),
    policy: language('Policy'),
    members: language('Members'),
    new_group: language('New Group'),
    create_a_group: language('Create a Group'),
    group_name_help: language('Group Name help',"The name of this route. Should be used to describe what types of calls this route matches(for example, 'sip1TOport1' or 'port1TOsip2')."),
    type_help: language('Type help','Type'),
    policy_help: language('Policy help','Policy'),
    members_help: language('Members help','Members'),
    modify_a_group: language('Modify a Group'),
    routing_groups: language('Routing Groups'),
    ascending: language('Ascending'),
    descending: language('Descending'),
    ringall: language('Ringall'),
    roundrobin: language('Roundrobin'),
    reverse_roundrobin: language('Reverse Roundrobin'),

    //Batch Create Rules
    increment: language('Increment'),
    copy: language('Copy'),
    sim_number: language('SIM Number'),
    fixed: language('Fixed'),

    //Routing Advanced
    flex_routing_switch: language('Flexible Routing Switch'),
    flex_routing_switch_help: language('Flexible Routing Switch help','Flexible Routing Switch'),
    enable_internal_fxs_call: language('Enable Internal FXS Call'),
    enable_internal_fxs_call_help: language('Enable Internal FXS Call help', 'Enable Internal FXS Call'),
    enable_internal_sip_call: language('Enable Internal SIP Call@Routing', 'Enable Internal SIP Call'),
    enable_internal_sip_call_help: language('Enable Internal SIP Call help@Routing', 'Enable Internal SIP Call'),
    flex_routing_switch_open_help: language('Flex Routing Switch Open help', 'This operation clears all fxs-bound SIP extension information.Need to continue?'),
    flex_routing_switch_close_help: language('Flex Routing Switch Close help', 'This operation clears all fxs-related routing information.Need to continue?'),

    //VLan
    vlan_settings: language('VLan Settings'),
    network_type: language('Network Type'),
    network_type_help: language('Network Type help','Network Type'),
    interface: language('Interface'),
    interface_help: language('Interface help','The name of network interface.'),
    factory: language('Factory'),
    DHCP: language('DHCP'),
    mac: language('MAC'),
    mac_help: language('MAC help','Physical address of your network interface.'),
    address: language('Address'),
    address_help: language('Address help','The IP address of your gateway.'),
    netmask: language('Netmask'),
    netmask_help: language('Netmask help','The subnet mask of your gateway.'),
    default_gateway: language('Default Gateway'),
    default_gateway_help: language('Default Gateway help','Default gateway IP addrress.'),
    dns_server: language('DNS Server'),
    reserved_address: language('Reserved Address'),
    reserved_address_help: language('Reserved Address help','The reserved IP address for this gateway.'),
    reserved_netmask: language('Reserved Netmask'),
    reserved_netmask_help: language('Reserved Netmask help','The subnet mask of the reserved IP address.'),
    lan_ipv4: language('LAN IPv4'),
    ipv4_settings: language('IPv4 Settings'),
    dns_servers: language('DNS Servers'),
    dns_servers_help: language('DNS Servers help','A list of DNS IP address. <br/>Basically this info is from your local network service provider. '),
    reserved_access_ip: language('Reserved Access IP'),
    reserved_access_ip_help: language('Reserved Access IP help','A reserved IP address to access in case your gateway IP is not available.<br/>Remember to set a similar network segment with the following address of your local PC.'),
    burn_confirm: language("Burn Confirm",  "After clicking 'burning' to complete, the device will automatically shut down! Do you want to continue?"),
    mac_tip: language('Mac Tip', 'Please enter a 12-bit string with character requirements of 0-9 or a-f or A-F'),
    mac_address_diff: language('MAC Address Diff','Note: MAC address is inconsistent with current.'),
    mac_address_same: language('MAC Address Same','MAC address is the same as the current one.'),
    mac_settings: language('MAC Settings'),
    lan1_settings: language('LAN1 Settings'),
    lan2_settings: language('LAN2 Settings'),
    MAC_Tip: language("Mac Tip", 'Please enter a 12-bit string with character requirements of 0-9 or a-f or A-F'),

    //Wan
    static: language('Static'),
    disable: language('Disable'),
    wan_ipv4: language('WAN IPv4'),

    //VPN
    switch: language('Switch'),
    switch_help: language('Switch help', 'Switch'),
    vpntype: language('VPNType'),
    vpntype_help: language('Type help@network-openvpn','The type of VPN.<br/>OpenVPN: openvpn.<br/>PPTP VPN: pptp vpn.<br/>None: None.'),
    openvpn: language('OpenVPN'),
    pptpvpn: language('PPTP VPN'),
    zerovpn: language('Zerotier VPN'),
    l2tpvpn: language('L2TP VPN'),
    helpinfo: language('OpenVPN Configuration Files help'),
    sample_configuration: language('Sample Configuration'),
    sample_configuration_help: language('OpenVPN Sample Configuration help','It\'s just a sample configuration which help you to refer to the format. <br/>'),
    download_samples: language('Download Samples'),
    server_ip: language('Server IP'),
    server_ip_help: language('Server IP help', 'Server IP'),
    pptp_vpn_help: language('PPTP VPN Configuration help','The pptp\'s server ip address.'),
    domain: language('Domain'),
    domain_help: language('PPTP VPN Domain help','pptp server domain'),
    use_mppe: language('Use MPPE'),
    use_mppe_help: language('Use MPPE help','Use MPPE'),
    ipsec: language('IPSec'),
    ipsec_help: language('IPSec help',"IPSec"),
    ipsec_password: language('IPSec Password'),
    ipsec_password_help: language('IPSec Password help',"IPSec Password"),
    openvpn_settings: language('OpenVPN Settings'),
    pptp_vpn_settings: language('PPTP VPN Settings'),
    network_id: language('Network ID'),
    network_id_help: language('Network ID help','Network ID'),
    l2tp_vpn_settings: language('L2TP VPN Settings'),
    failed_to_connect: language('Failed to Connect'),
    zerotier_vpn_settings: language('Zerotier VPN Settings'),
    pptpvpn_settings: language('PPTP VPN Settings help', 'PPTP VPN Settings'),
    openvpn_account_help: language('OPENVPN Account help', 'OPENVPN Account'),
    openvpn_password_help: language('OPENVPN Password help', 'OPENVPN Password'),
    openvpn_server_ip_help: language('OPENVPN Server IP help', 'OPENVPN Server IP'),
    openvpn_server_port_help: language('OPENVPN Server Port help', 'OPENVPN Server Port'),
    pptpvpn_server_help: language('PPTPVPN Server help', 'PPTPVPN Server'),
    pptpvpn_account_help: language('PPTPVPN Account help', 'PPTPVPN Account'),
    pptpvpn_password_help: language('PPTPVPN Password help', 'PPTPVPN Password'),
    l2tpvpn_server: language('L2TPVPN Server help', 'L2TPVPN Server'),
    l2tpvpn_username: language('L2TPVPN Username help', 'L2TPVPN Username'),
    l2tpvpn_password: language('L2TPVPN Password help', 'L2TPVPN Password'),
    openvpn_configuration_files_help: language('OpenVPN Configuration Files help','Notice:<br/>1.The format of the upload file should be like this "xxxx.tar.gz" or "xxx.ovpn";<br/>2.The postfix of configuration files should be ".conf";<br/>3.The upload file can not include any directory;<br/>4.If still confused please download the sample configuration and refer to it;'),

    //Ddns
    ddns: language('DDNS'),
    ddns_help: language('DDNS help',"Enable/Disable DDNS (dynamic domain name server). <br/>"),
    your_domain: language('Your domain'),
    your_domain_help: language('Your domain help','The domain to which your web server will belong.<br/>'),

    //Network-toolkit
    ping_and_traceroute: language('Ping and Traceroute'),
    traceroute: language('Traceroute'),
    traceroute_help: language('Traceroute'),
    channel_recording: language('Channel Recording'),
    source_host: language('Source host'),
    source_host_help: language('Source host help', 'Source host'),
    destination_host: language('Destination host'),
    destination_host_help: language('Destination host help','The name of network interface.'),
    tcpdump: language('Tcpdump Option Paramater'),
    tcpdump_help: language('Tcpdump Parameter Option help','the tool of tcpdump capture network data by parameter option specified'),
    add_tcpdump_option: language('Add a Tcpdump paramter option'),
    start: language('Start'),
    other_options: language('Other Options'),
    close_dialog: language('Clost Dialog Confirm','Are you sure you want to close the current window? After closing, the data will be lost'),
    confirmation: language('Confirmation'),

    //Security Settings
    firewall_settings: language('Firewall Settings'),
    firewall_enable: language('Firewall Enable'),
    firewall_enable_help: language('Firewall help', 'ON(enabled),OFF(disabled)'),
    ping_enable: language('Ping Enable'),
    ping_enable_help: language('Ping help', 'ON(enabled),OFF(disabled)'),
    white_list_settings: language('White List Settings'),
    white_list_enable: language('White List Enable'),
    white_list_enable_help: language('White List help', 'ON(enabled),OFF(disabled)'),
    list_ip_settings: language('List IP Settings'),
    list_ip_settings_help: language('Ping help', 'ON(enabled),OFF(disabled)'),
    black_list_settings: language('Black List Settings'),
    black_list_enable: language('Black List Enable'),
    black_list_enable_help: language('Black List help', 'ON(enabled),OFF(disabled)'),
    ping_help: language('Ping help', 'ON(enabled),OFF(disabled)'),

    //Security Rules
    protocol: language('Protocol'),
    ip: language('IP'),
    new_rule: language('New Rule'),
    create_a_rule: language('Create a Rule'),
    modify_a_rule: language('Modify a Rule'),
    rule_name_help: language('Rule Name help','The name of this rule.'),
    protocol_help: language('Protocol help','Choose the protocol.'),
    ip_mask: language('IP / MASK'),
    ip_mask_help: language('IP help','The format of IP is IP/MASK.Confirm the range by IP and mask.'),
    actions_help: language('Actions help','Choose the firewall action.'),

    //Adv astapi
    manager_name: language('Manager Name'),
    manager_name_help: language('Manager Name help','Name of the manager without space.'),
    manager_secret: language('Manager secret'),
    manager_secret_help: language('Manager secret help','Password for the manager.<br/>Characters: Allowed characters \'-_+.<>&0-9a-zA-Z\'.Length: 4-32 characters.'),
    deny: language('Deny'),
    deny_help: language('Deny help@adv-astapi','If you want to deny many hosts or networks, use char & as separator.<br/>Example: 0.0.0.0/0.0.0.0 or 192.168.1.0/255.255.255.0&10.0.0.0/255.0.0.0'),
    permit: language('Permit'),
    permit_help: language('Permit help@adv-astapi','If you want to permit many hosts or networks, use char & as separator.<br/>Example: 0.0.0.0/0.0.0.0 or 192.168.1.0/255.255.255.0&10.0.0.0/255.0.0.0'),
    read: language('read'),
    write: language('write'),
    System: language('System'),
    system_help: language('System help@adv-astapi','General information about the system and ability to run system management commands, <br/>such as Shutdown, Restart, and Reload.'),
    call: language('Call'),
    call_help: language('Call help@adv-astapi','Information about channels and ability to set information in a running channel.'),
    log: language('Log'),
    log_help: language('Log help@adv-astapi','Logging information.  Read-only. (Defined but not yet used.)'),
    verbose: language('Verbose'),
    verbose_help: language('Verbose help@adv-astapi','Verbose information.  Read-only. (Defined but not yet used.)'),
    command: language('Command'),
    command_help: language('Command help@adv-astapi','Permission to run CLI commands.  Write-only.'),
    agent: language('Agent'),
    agent_help: language('Agent help@adv-astapi','Information about queues and agents and ability to add queue members to a queue.'),
    user: language('User'),
    user_help: language('User help@adv-astapi','Permission to send and receive UserEvent.'),
    config: language('Config'),
    config_help: language('Config help@adv-astapi','Ability to read and write configuration files.'),
    dtmf: language('DTMF'),
    dtmf_help: language('DTMF help@adv-astapi','Receive DTMF events.  Read-only.'),
    reporting: language('Reporting'),
    reporting_help: language('Reporting help@adv-astapi','Ability to get information about the system.'),
    cdr_help: language('CDR help@adv-astapi','Output of cdr_manager, if loaded.  Read-only.'),
    dialplan: language('Dialplan'),
    dialplan_help: language('Dialplan help@adv-astapi','Receive NewExten and VarSet events.  Read-only.'),
    originate_help: language('Originate help@adv-astapi','Permission to originate new calls.  Write-only.'),
    all_help: language('All help@adv-astapi','Select all or deselect all.'),
    manager: language('Manager'),
    rights: language('Rights'),

    //Adv astcli
    execute: language('Execute'),

    //Adv Astfileeditor
    configuration_files: language('Configuration Files'),
    reload_asterisk: language('Reload Asterisk'),
    reload_asterisk_tip: language('reload asterisk tip' ,'Are you sure to reload asterisk now?'),
    restart_asterisk_successfully: language('Restart asterisk successfully'),
    restart_asterisk_failed: language('Restart asterisk failed'),

    //Adv cloud
    enable_cloud_service: language('Enable Cloud Service'),
    enable_cloud_service_help: language('Enable Cloud Service'),
    choose_service: language('Choose Service'),
    choose_service_help: language('Choose Service help', "choosing a remote server the current device will connect"),
    China: language('China'),
    America: language('America'),
    Europe: language('Europe'),
    Customize: language('Customize'),
    account: language('Account'),
    account_help: language('cloud help@adv-account', "the account which is registered in OpenVox cloud center."),
    connection_status: language('Connection Status'),
    connection_status_help: language('cloud help@adv-Connection Status',"Cloud management connection status."),
    password_error: language('Password error'),
    user_does_not_exist: language('User does not exist'),
    you_have_been_blacklisted: language('You have been blacklisted'),
    connection_timeout: language('Connection Timeout'),
    custom_server: language('Custom Server'),
    connected: language('Connected'),
    cloud_signmessage_help: language('cloud signmessage help',"Don't have an account?"),
    cloud_sign_help: language('cloud sign help',"Sign up"),

    //Adv TR069
    tr069_settings: language('TR069 Settings'),
    tr069_help: language('TR069 help','TR069'),
    provisioning_code: language('Provisioning code'),
    provisioning_code_help: language('Provisioning code help','Provisioning code'),
    periodic_inform_enable: language('Periodic inform enable'),
    periodic_inform_enable_help: language('Periodic inform enable help','Periodic inform enable'),
    periodic_inform_interval: language('Periodic inform interval'),
    periodic_inform_interval_help: language('Periodic inform interval help','Periodic inform interval'),
    second: language('Second'),
    model_name_help: language('Model Name help','Model Name'),
    connection_request_url: language('Connection request URL'),
    connection_request_url_help: language('Connection request URL help', 'Connection request URL'),
    connection_request_username: language('Connection request username'),
    connection_request_username_help: language('Connection request username help', 'Connection request username'),
    connection_request_password: language('Connection request password'),
    connection_request_password_help: language('Connection request password help', 'Connection request password'),

    //Adv autoprovision
    auto_provision_settings: language('Auto Provision Settings'),
    firmware_enable: language('Firmware Enable'),
    firmware_enable_help: language('Firmware Enable help','Firmware Enable'),
    configuration_enable: language('Configuration Enable'),
    configuration_enable_help: language('Configuration Enable help','Configuration Enable'),
    dhcp_option_66: language('DHCP Option 66'),
    dhcp_option_66_help: language('DHCP Option 66 help', 'DHCP Option 66'),
    auto_config_server_url: language('Auto Config Server URL'),
    auto_config_server_url_help: language('Auto Config Server URL help','Auto Config Server URL'),
    upgrade_mode: language('Upgrade Mode'),
    upgrade_mode_help: language('Upgrade Mode help','Upgrade Mode'),
    power_on: language('Power On'),
    Immediately: language('Immediately'),

    //Adv Snmp
    snmp_parameter: language('SNMP Parameter'),
    snmp_enable: language('SNMP Enable'),
    snmp_enable_help: language('SNMP Enable Help','Whether to enable SNMP'),
    system_contact: language('System Contact'),
    system_contact_help: language('System Contact Help','System contact information'),
    system_location: language('System Location'),
    system_location_help: language('System Location Help','The locale of system contact'),
    support_snmp_version: language('Support SNMP Version'),
    support_snmp_version_help: language('Support SNMP Version help','Select the SNMP version to be run'),
    snmp_version: language('SNMP Version'),
    snmp_version_help: language('SNMP version','Modify the selected SNMP version\'s parameters'),
    community_configuration: language('Community Configuration'),
    security_name: language('Security Name'),
    security_name_help: language('Security Name'),
    souce: language('Souce'),
    souce_help: language('Souce'),
    community: language('Community'),
    community_help: language('Community'),
    group_configuration: language('Group Configuration'),
    group_help: language('Group'),
    view_configuration: language('View Configuration'),
    viewname: language('ViewName'),
    viewname_help: language('ViewName'),
    viewtype: language('ViewType'),
    viewtype_help: language('ViewType'),
    viewsubtree: language('ViewSubtree'),
    viewsubtree_help: language('ViewSubtree'),
    viewmask: language('ViewMask'),
    viewmask_help: language('ViewMask'),
    access_configuration: language('Access Configuration'),
    read_help: language('Read'),
    write_help: language('Write'),
    notify: language('Notify'),
    notify_help: language('Notify'),
    authtype: language('AuthType'),
    authtype_help: language('AuthType'),
    autopassword_help: language('AuthPassword'),
    privacyType: language('PrivacyType'),
    privacyType_help: language('PrivacyType'),
    privacypassword: language('PrivacyPassword'),
    privacypassword_help: language('PrivacyPassword'),
    user_configuration: language('User Configuration'),

    //Log Settings
    system_logs_help: language('System Logs help','Whether enable or disable system log.'),
    auto_clean: language('Auto clean'),
    auto_clean_help: language('Auto clean help','switch on : when the size of log file reaches the max size, <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; the system will cut a half of the file. New logs will be retained.<br>switch off : logs will remain, and the file size will increase gradually. <br>'),
    auto_clean_default: language('Auto clean default@System Logs','default on, default size=1MB.'),
    auto_clean_default_asterisk: language('Auto clean default@Asterisk Logs','default on, default size=100KB.'),
    auto_clean_default_sip: language('Auto clean default@SIP Logs','default on, default size=100KB.'),
    auto_clean_default_cdr: language('Auto clean default@Call Detail Record','default on, default size=5MB.'),
    maxsize: language('maxsize'),
    maxsize_help: language('maxsize'),
    notice: language('Notice'),
    notice_help: language('Asterisk Logs Notice help','Asterisk console notice message  switch.'),
    warning: language('Warning'),
    warning_help: language('Asterisk Logs Warning help','Asterisk console warning message  switch.'),
    debug: language('Debug'),
    debug_help: language('Asterisk Logs Debug help','Asterisk console debug message switch.'),
    error: language('Error'),
    error_help: language('Asterisk Logs Error help','Asterisk console error message  switch.'),
    sip_logs_help: language('SIP Logs help','Whether enable or disable SIP log.'),
    dahdi_logs_help: language('DAHDI Logs help','Whether enable or disable DHADI log.'),
    auto_clean_dahdi: language('Auto clean default@DAHDI Logs','default on, default size=2MB.'),
    syslog: language('Syslog'),
    local_syslog: language('Local Syslog'),
    local_syslog_help: language('Local Syslog help', 'This action needs to set the Asterisk log level in the log, and then turn on the local Syslog to take effect.'),
    server_address: language('Server Address'),
    server_address_help: language('Server Address help','Server Address'),
    server_port: language('Server Port'),
    server_port_help: language('Server Port help','Server Port'),
    klog_level: language('Klog Level'),
    klog_level_help: language('Klog Level help','Klog Level'),
    cdr_level: language('CDR Level'),
    cdr_level_help: language('CDR Level help','CDR Level'),
    clean_up: language('Clean Up'),
    refresh: language('Refresh'),
    cdr_logs: language('CDR Logs'),
    start_time: language('Start Time'),
    end_time: language('End Time'),
    duration: language('Duration'),
    result: language('Result'),
    filter: language('Filter'),
    clean_filter: language('Clean Filter'),
    clean: language('Clean'),
    total_records: language('Total Records'),
    export: language('Export'),
    All: language('All'),
    ANSWERED: language('ANSWERED'),
    BUSY: language('BUSY'),
    FAILED: language('FAILED'),
    NO_ANSWER: language('NO ANSWER'),
    page_not_found: language('page not found'),
    resource_error: language('resource error'),
    refresh_rate: language('Refresh Rate'),
    OFF: language('OFF'),
    refresh_successfully: language('Refresh Successfully'),

    //other
    voice_file: language('Voice File'),
    test: language('Test'),
    select_placeholder: language('select_placeholder'),
    switch_language_confirm: language('Switch Language Confirm', 'Are you sure you want to switch languages?'),
    switch_language_successfully: language('Switch language successfully'),
    switch_language_failed: language('Failed to switch languages'),
    save_successfully: language('Save Successfully'),
    save_failed: language('Save Failed'),

    check_domain: language('js check domain','Invalid domain or IP address.'),
    limit_character: language('limit character'),
    check_username: language('js check username 1'),
    check_username_root: language('User Name warning@system-login ssh',"Can't use 'root'"),
    check_diyname: language('js check diyname','Allowed character must be any of [-_+.<>&0-9a-zA-Z],1 - 32 characters.'),
    check_diypwd: language('js check diypwd','Allowed character must be any of [-_+.<>&0-9a-zA-Z],4 - 32 characters.'),
    check_ssh_diyname: language('js check ssh_diyname','Allowed character must be any of [-_+.<>&0-9a-zA-Z],1 - 25 characters.'),
    check_endpoint_name: language('js check sipendp','Allowed character must be any of [0-9a-zA-Z`~!@#$%^*()_{}:|?-=.], 1-32 characters.'),
    check_sip_name: language('js check sipname','Allowed character must be any of [0-9a-zA-Z$*-=_.], length: 1-32'),
    check_sip_pwd: language('js check sippwd','Allowed character must be any of [0-9a-zA-Z`~!#@$%^&*()_+{}|<>-=[],.],1 - 32 characters.'),
    check_keyname: language('js check keyname', 'keyname you input is not valid'),
    check_organization: language('js check organization', 'organization you input is not right'),
    check_digitgain: language('js check digitgain', 'Invalid value! Range: from -20.0dB to 6dB, in 0.1 dB increments.'),
    check_callwaiting: language('js check callwaiting', 'Do not enable Call waiting and Call forward at same time.'),
    check_delay_reply_200ok_timer: language('js check delay_reply_200ok_timer', 'Invalid value! Range: from 1s to 90s.'),
    check_calloutmininterval: language('js check calloutmininterval','Range:400 ~ 10000ms'),
    check_number_int: language('Check Number Int', 'Must be Number.Range:>=0.'),
    check_param_int: language('js check parameters data type','parameters data type must be int'),
    check_content_empty: language('Content cannot be empty'),
    username_already_exists: language('The username already exists'),
    confirm_password_warning: language('Confirm Password warning@system-login web','This password must match the password above.'),
    password_should_not_be_null: language('password should not be null'),
    confirm_password_should_not_be_null: language('confirm password should not be null'),
    webserver_http_help: language('js webserver http port help','Range: 1024-65535, Default 80. Some ports are forbidding.'),
    webserver_https_help: language('js webserver https port help','Range: 1024-65535, Default 443. Some ports are forbidding.'),
    delete_language_alert: language('Delete Language alert','Sorry, you can not delete the default language.'),
    delete_language_confirm: language('Delete Language confirm','Are you sure to delete the selected language package?'),
    already_exists: language('Already exists', 'The language already exists'),
    fire_upload_help: language("Firmware upload help","The format of the uploaded file is incorrect."),
    delete_confirm: language('Delete Confirm', 'Are you sure you want to delete?'),
    successfully_deleted: language('Successfully Deleted'),
    failed_to_delete: language('Failed to delete'),
    select_item_help: language('Please select at least one item'),
    port_binding_overwrite_confirm: language('ports binding overwrite confirm'),
    created_successfully: language('Created Successfully'),
    created_failed: language('Create Failed'),
    TLS_server_existed_help: language('TLS Server Existed help', 'Only one server can be created.'),
    TLS_create_server_help: language('TLS Create Server help','Please create the server first.'),
    TLS_key_password_same_as_server: language('TLS key password same as server','Please checking the server keys is exist or not and client password must be same with Server!'),
    unlimit_tip: language('Unlimit Tip','Are you sure you want to unlimit it?'),
    successfully: language('Successfully'),
    logs_clean_up_confirm: language('Clean Up confirm','Are you sure to delete all logs ?'),
    clean_up_confirm: language('Clean Up confirm','Are you sure to clean up all logs!'),
    clean_up_successful: language('Clean up successful'),
    clean_up_failed: language('Clean up failed'),
    select_all_parameters: language('Select all parameters'),
    select_file_alert: language('Select File alert','Please select your file first!'),
}